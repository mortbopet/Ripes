name: WASM / Qt 6.6.0
on:
  push:
    branches:
      - '**'

jobs:
  buildUbuntuXenial:
    runs-on: ubuntu-20.04
    env:
      CC: emcc
      CXX: em++

    strategy:
      matrix:
        build-type: [Release]

    steps:

    - name: Job info
      run: |
        echo "GitHub Ref: ${{ github.ref }}"
        echo "Event: ${{ github.event }}"

    - name: get container ready for build
      run: |
        sudo apt-get update
        sudo apt-get upgrade -y
        DEBIAN_FRONTEND=noninteractive sudo apt-get install -y -q --force-yes \
        automake cmake git wget libfuse2 desktop-file-utils tree \
        build-essential libgl1-mesa-dev libxkbcommon-x11-0 libpulse-dev \
        libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-render-util0 \
        libxcb-xinerama0 libxcb-composite0 libxcb-cursor0 libxcb-damage0 \
        libxcb-dpms0 libxcb-dri2-0 libxcb-dri3-0 libxcb-ewmh2 libxcb-glx0 \
        libxcb-present0 libxcb-randr0 libxcb-record0 libxcb-render0 libxcb-res0 \
        libxcb-screensaver0 libxcb-shape0 libxcb-shm0 libxcb-sync1 libxcb-util1 libegl1 libegl1-mesa-dev

    - name: checkout sources
      uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Install Qt (Host)
      uses: jurplel/install-qt-action@v3
      with:
        aqtversion: '==3.1.*'
        py7zrversion: '>=0.20.2'
        version: '6.6.0'
        host: 'linux'
        target: 'desktop'
        arch: 'gcc_64'
        cache: 'true'
        cache-key-prefix: 'install-qt-host-6.6.0'
        modules: 'qtcharts'

    - name: Install Qt (Emscripten)
      uses: jurplel/install-qt-action@v3
      with:
        aqtversion: '==3.1.*'
        py7zrversion: '>=0.20.2'
        version: '6.6.0'
        host: 'linux'
        target: 'desktop'
        arch: 'wasm_multithread'
        modules: 'qtcharts'
        cache: 'true'
        cache-key-prefix: 'install-qt-emscripten-6.6.0'

    - name: install Emscripten
      run: |
        git clone https://github.com/emscripten-core/emsdk.git
        cd emsdk
        ./emsdk install latest 3.1.25
        ./emsdk activate 3.1.25

    - name: build Ripes
      run: |
        echo "building desktop"
        source emsdk/emsdk_env.sh
        export QT_HOST_PATH=$(pwd)/../Qt/6.6.0/gcc_64/
        find ${QT_HOST_PATH}
        cmake                                           \
          -DCMAKE_BUILD_TYPE=${{ matrix.build-type }}   \
          -DRIPES_WITH_QPROCESS=OFF                     \
          -DEMSCRIPTEN=1                                \
          -DQT_HOST_PATH="${QT_HOST_PATH}"              \
          -DCMAKE_TOOLCHAIN_FILE=$(pwd)/../Qt/6.6.0/wasm_multithread/lib/cmake/Qt6/qt.toolchain.cmake \
          -DCMAKE_PREFIX_PATH=$(pwd)/../Qt/6.6.0/wasm_multithread/ \
          -DEMSCRIPTEN_FORCE_COMPILERS=ON \
          .
        make -j $(nproc)

    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.build-type }}_wasm
        path: |
          Ripes.wasm
          Ripes.js
          Ripes.worker.js
          qtloader.js

    # Dispatch the publish.yml workflow over at mortbopet.github.io
    - run: |
        gh workflow run publish.yml -R mortbopet/mortbopet.github.io --ref master
      if: github.repository == 'mortbopet/Ripes'
      env:
        GH_TOKEN: ${{ secrets.MORTBOPET_GITHUB_IO_TOKEN }}
